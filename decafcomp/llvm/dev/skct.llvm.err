; ModuleID = 'foo'
source_filename = "Test"

@globalstring = private unnamed_addr constant [4 x i8] c"foo\00", align 1

declare void @print_int(i32)

declare void @print_string(i8*)

define i1 @foo() {
entry:
  call void @print_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @globalstring, i32 0, i32 0))
  ret i1 false
  ret i1 false
}

define i32 @main() {
entry:
  %flag = alloca i1
  store i1 false, i1* %flag
  br i1 true, label %scEnd, label %noSC

noSC:                                             ; preds = %entry
  %calltmp = call i1 @foo()
  br i1 %calltmp, label %noSC1, label %scEnd2

scEnd:                                            ; preds = %scEnd2, %entry
  %phival3 = phi i1 [ true, %entry ], [ %tempOr, %scEnd2 ]
  store i1 %phival3, i1* %flag
  %flag4 = load i1, i1* %flag
  %arg = zext i1 %flag4 to i32
  call void @print_int(i32 %arg)
  ret i32 0

noSC1:                                            ; preds = %noSC
  %tempAnd = and i1 %calltmp, false
  br label %scEnd2

scEnd2:                                           ; preds = %noSC1, %noSC
  %phival = phi i1 [ %calltmp, %noSC ], [ %tempAnd, %noSC1 ]
  %tempOr = or i1 true, %phival
  br label %scEnd
}
