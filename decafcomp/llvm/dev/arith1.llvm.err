; ModuleID = 'foo'
source_filename = "Test"

declare void @print_int(i32)

define i32 @main() {
entry:
  %flag = alloca i1
  store i1 false, i1* %flag
  %a = alloca i1
  store i1 false, i1* %a
  %b = alloca i1
  store i1 false, i1* %b
  %c = alloca i1
  store i1 false, i1* %c
  %size = alloca i32
  store i32 0, i32* %size
  store i1 true, i1* %a
  store i1 false, i1* %b
  store i1 true, i1* %c
  %a1 = load i1, i1* %a
  br i1 %a1, label %scEnd, label %noSC

noSC:                                             ; preds = %entry
  %b2 = load i1, i1* %b
  br i1 %b2, label %noSC3, label %scEnd4

scEnd:                                            ; preds = %scEnd4, %entry
  %phival6 = phi i1 [ %a1, %entry ], [ %tempOr, %scEnd4 ]
  store i1 %phival6, i1* %flag
  store i32 0, i32* %size
  br label %if

noSC3:                                            ; preds = %noSC
  %c5 = load i1, i1* %c
  %tmpNot = xor i1 %c5, true
  %tempAnd = and i1 %b2, %tmpNot
  br label %scEnd4

scEnd4:                                           ; preds = %noSC3, %noSC
  %phival = phi i1 [ %b2, %noSC ], [ %tempAnd, %noSC3 ]
  %tempOr = or i1 %a1, %phival
  br label %scEnd

if:                                               ; preds = %scEnd
  %size7 = load i32, i32* %size
  %temp = icmp sge i32 %size7, 0
  br i1 %temp, label %ifTrue, label %ifEnd

ifTrue:                                           ; preds = %if
  %size8 = load i32, i32* %size
  call void @print_int(i32 %size8)
  br label %ifEnd

ifEnd:                                            ; preds = %ifTrue, %if
  ret i32 0
}
