; ModuleID = 'Catalan'
source_filename = "Test"

declare void @print_int(i32)

declare i32 @read_int()

define void @main() {
entry:
  %calltmp = call i32 @read_int()
  %calltmp1 = call i32 @cat(i32 %calltmp)
  call void @print_int(i32 %calltmp1)
  ret void
}

define i32 @fact(i32 %n) {
entry:
  %n1 = alloca i32
  store i32 %n, i32* %n1
  br label %if

if:                                               ; preds = %entry
  %n2 = load i32, i32* %n1
  %tempEq = icmp eq i32 %n2, 1
  br i1 %tempEq, label %ifTrue, label %ifElse

ifTrue:                                           ; preds = %if
  ret i32 1
  br label %ifEnd

ifElse:                                           ; preds = %if
  %n3 = load i32, i32* %n1
  %n4 = load i32, i32* %n1
  %tmpSub = sub i32 %n4, 1
  %calltmp = call i32 @fact(i32 %tmpSub)
  %tempMul = mul i32 %n3, %calltmp
  ret i32 %tempMul
  br label %ifEnd

ifEnd:                                            ; preds = %ifTrue, %ifElse
  ret i32 0
}

define i32 @choose(i32 %a, i32 %b) {
entry:
  %a1 = alloca i32
  store i32 %a, i32* %a1
  %b2 = alloca i32
  store i32 %b, i32* %b2
  %a3 = load i32, i32* %a1
  %calltmp = call i32 @fact(i32 %a3)
  %b4 = load i32, i32* %b2
  %calltmp5 = call i32 @fact(i32 %b4)
  %a6 = load i32, i32* %a1
  %b7 = load i32, i32* %b2
  %tmpSub = sub i32 %a6, %b7
  %calltmp8 = call i32 @fact(i32 %tmpSub)
  %tempMul = mul i32 %calltmp5, %calltmp8
  %tempDiv = sdiv i32 %calltmp, %tempMul
  ret i32 %tempDiv
  ret i32 0
}

define i32 @cat(i32 %n) {
entry:
  %n1 = alloca i32
  store i32 %n, i32* %n1
  %n2 = load i32, i32* %n1
  %tempMul = mul i32 2, %n2
  %n3 = load i32, i32* %n1
  %calltmp = call i32 @choose(i32 %tempMul, i32 %n3)
  %n4 = load i32, i32* %n1
  %tmpAdd = add i32 %n4, 1
  %tempDiv = sdiv i32 %calltmp, %tmpAdd
  ret i32 %tempDiv
  ret i32 0
}
