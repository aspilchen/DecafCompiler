; ModuleID = 'Test'
source_filename = "Test"

declare void @print_int(i32)

define void @test3(i1 %a) {
entry:
  %a1 = alloca i1
  store i1 %a, i1* %a1
  br label %if

if:                                               ; preds = %entry
  %a2 = load i1, i1* %a1
  br i1 %a2, label %ifTrue, label %ifEnd

ifTrue:                                           ; preds = %if
  %a3 = load i1, i1* %a1
  %arg = zext i1 %a3 to i32
  call void @print_int(i32 %arg)
  br label %ifEnd

ifEnd:                                            ; preds = %ifTrue, %if
  ret void
}

define void @test2(i1 %a) {
entry:
  %a1 = alloca i1
  store i1 %a, i1* %a1
  %a2 = load i1, i1* %a1
  %arg = zext i1 %a2 to i32
  call void @print_int(i32 %arg)
  %a3 = load i1, i1* %a1
  %tmpNot = xor i1 %a3, true
  call void @test3(i1 %tmpNot)
  ret void
}

define void @test1(i1 %a) {
entry:
  %a1 = alloca i1
  store i1 %a, i1* %a1
  %a2 = load i1, i1* %a1
  %arg = zext i1 %a2 to i32
  call void @print_int(i32 %arg)
  %a3 = load i1, i1* %a1
  %tmpNot = xor i1 %a3, true
  call void @test2(i1 %tmpNot)
  ret void
}

define i32 @main() {
entry:
  call void @test1(i1 true)
  ret i32 0
}
